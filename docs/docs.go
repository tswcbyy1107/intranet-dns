// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/apis": {
            "get": {
                "description": "page query apis by params",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "list api",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page, min=1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size, min=10, max=1000",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "api path",
                        "name": "path",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "api method",
                        "name": "method",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "api activated",
                        "name": "active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "apis",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "api's active and audit attributes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "update api",
                "parameters": [
                    {
                        "description": "id: api db id; audit: true 1, request logged; active: true 1, in use",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/apis.updateApiReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "api updated",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/audit_logs": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "list system audit logs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "min=1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min=10, max=1000",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user name",
                        "name": "user_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "request uid",
                        "name": "request_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "remote ip",
                        "name": "client_ip",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "2006-01-02 15:04:05",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "2006-01-02 15:04:05",
                        "name": "end_time",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/dns": {
            "get": {
                "tags": [
                    "dns-operation"
                ],
                "summary": "intranet dns crud",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mock参数",
                        "name": "mock",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/ping": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "service ping api",
                "parameters": [
                    {
                        "type": "string",
                        "description": "mock",
                        "name": "mock",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/roles": {
            "get": {
                "description": "get all system roles in pages",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "list system roles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "min=1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "min=10, max=1000",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "role chinese name",
                        "name": "name_cn",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "roles",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "update system role",
                "parameters": [
                    {
                        "description": "role request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.updateRoleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "add system role",
                "parameters": [
                    {
                        "description": "role request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SysRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/roles/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "del role",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/roles/{id}/apis": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "system role accessible apis",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "role id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role detail with accessible apis",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "list system user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page, min=1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size, min=10, max=1000",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "user role's id",
                        "name": "role_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "user chinese name",
                        "name": "name_cn",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "system role activated",
                        "name": "active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "users",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "update system role",
                "parameters": [
                    {
                        "description": "update user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.updateUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "add system user",
                "parameters": [
                    {
                        "description": "user request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SysUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "del system user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user id",
                        "schema": {
                            "$ref": "#/definitions/ctx.StdResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apis.updateApiReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "audit": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "apis.updateRoleReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "api_ids": {
                    "description": "role accessible apis id",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "id": {
                    "description": "role id",
                    "type": "integer"
                },
                "name": {
                    "description": "role en name",
                    "type": "string"
                },
                "name_cn": {
                    "description": "role cn name",
                    "type": "string"
                }
            }
        },
        "apis.updateUserReq": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "active": {
                    "description": "user is active",
                    "type": "boolean"
                },
                "email": {
                    "description": "user email address",
                    "type": "string"
                },
                "id": {
                    "description": "user id",
                    "type": "integer"
                },
                "role_ids": {
                    "description": "user roles",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "ctx.StdResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "data"
                },
                "error": {
                    "description": "self err",
                    "$ref": "#/definitions/models.Errors"
                },
                "pages": {
                    "description": "pages",
                    "$ref": "#/definitions/models.PageRsp"
                },
                "request_id": {
                    "description": "api request uid",
                    "type": "string"
                },
                "status": {
                    "description": "true: succeed, false: failed",
                    "type": "boolean"
                }
            }
        },
        "models.Api": {
            "type": "object",
            "properties": {
                "active": {
                    "description": "api is activated or not, 0 false",
                    "type": "boolean"
                },
                "audit": {
                    "description": "api is audited or not, 0 false",
                    "type": "boolean"
                },
                "auth": {
                    "description": "api requires auth",
                    "type": "boolean"
                },
                "created_at": {
                    "description": "create time",
                    "type": "string"
                },
                "description": {
                    "description": "api description",
                    "type": "string"
                },
                "id": {
                    "description": "primary id",
                    "type": "integer"
                },
                "method": {
                    "description": "api method",
                    "type": "string"
                },
                "path": {
                    "description": "api path",
                    "type": "string"
                },
                "updated_at": {
                    "description": "create time",
                    "type": "string"
                }
            }
        },
        "models.Errors": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "self error code",
                    "type": "integer"
                },
                "message": {
                    "description": "self error message",
                    "type": "string"
                }
            }
        },
        "models.PageRsp": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.SysRole": {
            "type": "object",
            "properties": {
                "accessible_apis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Api"
                    }
                },
                "api_ids": {
                    "type": "object"
                },
                "created_at": {
                    "description": "create time",
                    "type": "string"
                },
                "id": {
                    "description": "primary id",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "name_cn": {
                    "type": "string"
                },
                "updated_at": {
                    "description": "create time",
                    "type": "string"
                }
            }
        },
        "models.SysUser": {
            "type": "object",
            "properties": {
                "active": {
                    "description": "user is banned, active=0",
                    "type": "boolean"
                },
                "created_at": {
                    "description": "create time",
                    "type": "string"
                },
                "email": {
                    "description": "user email address",
                    "type": "string",
                    "minLength": 1
                },
                "id": {
                    "description": "primary id",
                    "type": "integer"
                },
                "last_login": {
                    "description": "create time",
                    "type": "string"
                },
                "login_times": {
                    "description": "user login times",
                    "type": "integer"
                },
                "name": {
                    "description": "user name",
                    "type": "string",
                    "minLength": 1
                },
                "name_cn": {
                    "description": "user cn name",
                    "type": "string",
                    "minLength": 1
                },
                "role_ids": {
                    "description": "user roles",
                    "type": "object"
                },
                "updated_at": {
                    "description": "create time",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:16789",
	BasePath:         "",
	Schemes:          []string{"http"},
	Title:            "sre dns service backend demo",
	Description:      "simple intranet dns management system, dns crud operation with centos bind9",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
